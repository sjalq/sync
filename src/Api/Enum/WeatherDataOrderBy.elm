-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module Api.Enum.WeatherDataOrderBy exposing (..)

import Json.Decode as Decode exposing (Decoder)


{-| Methods to use when ordering `WeatherDatum`.
-}
type WeatherDataOrderBy
    = Natural
    | IdAsc
    | IdDesc
    | LocationAsc
    | LocationDesc
    | TimeAsc
    | TimeDesc
    | WindAsc
    | WindDesc
    | VisibilityAsc
    | VisibilityDesc
    | TemperatureAsc
    | TemperatureDesc
    | DewPointAsc
    | DewPointDesc
    | RelativeHumidityAsc
    | RelativeHumidityDesc
    | PressureAsc
    | PressureDesc
    | CreatedAtAsc
    | CreatedAtDesc
    | PrimaryKeyAsc
    | PrimaryKeyDesc


list : List WeatherDataOrderBy
list =
    [ Natural, IdAsc, IdDesc, LocationAsc, LocationDesc, TimeAsc, TimeDesc, WindAsc, WindDesc, VisibilityAsc, VisibilityDesc, TemperatureAsc, TemperatureDesc, DewPointAsc, DewPointDesc, RelativeHumidityAsc, RelativeHumidityDesc, PressureAsc, PressureDesc, CreatedAtAsc, CreatedAtDesc, PrimaryKeyAsc, PrimaryKeyDesc ]


decoder : Decoder WeatherDataOrderBy
decoder =
    Decode.string
        |> Decode.andThen
            (\string ->
                case string of
                    "NATURAL" ->
                        Decode.succeed Natural

                    "ID_ASC" ->
                        Decode.succeed IdAsc

                    "ID_DESC" ->
                        Decode.succeed IdDesc

                    "LOCATION_ASC" ->
                        Decode.succeed LocationAsc

                    "LOCATION_DESC" ->
                        Decode.succeed LocationDesc

                    "TIME_ASC" ->
                        Decode.succeed TimeAsc

                    "TIME_DESC" ->
                        Decode.succeed TimeDesc

                    "WIND_ASC" ->
                        Decode.succeed WindAsc

                    "WIND_DESC" ->
                        Decode.succeed WindDesc

                    "VISIBILITY_ASC" ->
                        Decode.succeed VisibilityAsc

                    "VISIBILITY_DESC" ->
                        Decode.succeed VisibilityDesc

                    "TEMPERATURE_ASC" ->
                        Decode.succeed TemperatureAsc

                    "TEMPERATURE_DESC" ->
                        Decode.succeed TemperatureDesc

                    "DEW_POINT_ASC" ->
                        Decode.succeed DewPointAsc

                    "DEW_POINT_DESC" ->
                        Decode.succeed DewPointDesc

                    "RELATIVE_HUMIDITY_ASC" ->
                        Decode.succeed RelativeHumidityAsc

                    "RELATIVE_HUMIDITY_DESC" ->
                        Decode.succeed RelativeHumidityDesc

                    "PRESSURE_ASC" ->
                        Decode.succeed PressureAsc

                    "PRESSURE_DESC" ->
                        Decode.succeed PressureDesc

                    "CREATED_AT_ASC" ->
                        Decode.succeed CreatedAtAsc

                    "CREATED_AT_DESC" ->
                        Decode.succeed CreatedAtDesc

                    "PRIMARY_KEY_ASC" ->
                        Decode.succeed PrimaryKeyAsc

                    "PRIMARY_KEY_DESC" ->
                        Decode.succeed PrimaryKeyDesc

                    _ ->
                        Decode.fail ("Invalid WeatherDataOrderBy type, " ++ string ++ " try re-running the @dillonkearns/elm-graphql CLI ")
            )


{-| Convert from the union type representing the Enum to a string that the GraphQL server will recognize.
-}
toString : WeatherDataOrderBy -> String
toString enum____ =
    case enum____ of
        Natural ->
            "NATURAL"

        IdAsc ->
            "ID_ASC"

        IdDesc ->
            "ID_DESC"

        LocationAsc ->
            "LOCATION_ASC"

        LocationDesc ->
            "LOCATION_DESC"

        TimeAsc ->
            "TIME_ASC"

        TimeDesc ->
            "TIME_DESC"

        WindAsc ->
            "WIND_ASC"

        WindDesc ->
            "WIND_DESC"

        VisibilityAsc ->
            "VISIBILITY_ASC"

        VisibilityDesc ->
            "VISIBILITY_DESC"

        TemperatureAsc ->
            "TEMPERATURE_ASC"

        TemperatureDesc ->
            "TEMPERATURE_DESC"

        DewPointAsc ->
            "DEW_POINT_ASC"

        DewPointDesc ->
            "DEW_POINT_DESC"

        RelativeHumidityAsc ->
            "RELATIVE_HUMIDITY_ASC"

        RelativeHumidityDesc ->
            "RELATIVE_HUMIDITY_DESC"

        PressureAsc ->
            "PRESSURE_ASC"

        PressureDesc ->
            "PRESSURE_DESC"

        CreatedAtAsc ->
            "CREATED_AT_ASC"

        CreatedAtDesc ->
            "CREATED_AT_DESC"

        PrimaryKeyAsc ->
            "PRIMARY_KEY_ASC"

        PrimaryKeyDesc ->
            "PRIMARY_KEY_DESC"


{-| Convert from a String representation to an elm representation enum.
This is the inverse of the Enum `toString` function. So you can call `toString` and then convert back `fromString` safely.

    Swapi.Enum.Episode.NewHope
        |> Swapi.Enum.Episode.toString
        |> Swapi.Enum.Episode.fromString
        == Just NewHope

This can be useful for generating Strings to use for <select> menus to check which item was selected.

-}
fromString : String -> Maybe WeatherDataOrderBy
fromString enumString____ =
    case enumString____ of
        "NATURAL" ->
            Just Natural

        "ID_ASC" ->
            Just IdAsc

        "ID_DESC" ->
            Just IdDesc

        "LOCATION_ASC" ->
            Just LocationAsc

        "LOCATION_DESC" ->
            Just LocationDesc

        "TIME_ASC" ->
            Just TimeAsc

        "TIME_DESC" ->
            Just TimeDesc

        "WIND_ASC" ->
            Just WindAsc

        "WIND_DESC" ->
            Just WindDesc

        "VISIBILITY_ASC" ->
            Just VisibilityAsc

        "VISIBILITY_DESC" ->
            Just VisibilityDesc

        "TEMPERATURE_ASC" ->
            Just TemperatureAsc

        "TEMPERATURE_DESC" ->
            Just TemperatureDesc

        "DEW_POINT_ASC" ->
            Just DewPointAsc

        "DEW_POINT_DESC" ->
            Just DewPointDesc

        "RELATIVE_HUMIDITY_ASC" ->
            Just RelativeHumidityAsc

        "RELATIVE_HUMIDITY_DESC" ->
            Just RelativeHumidityDesc

        "PRESSURE_ASC" ->
            Just PressureAsc

        "PRESSURE_DESC" ->
            Just PressureDesc

        "CREATED_AT_ASC" ->
            Just CreatedAtAsc

        "CREATED_AT_DESC" ->
            Just CreatedAtDesc

        "PRIMARY_KEY_ASC" ->
            Just PrimaryKeyAsc

        "PRIMARY_KEY_DESC" ->
            Just PrimaryKeyDesc

        _ ->
            Nothing
