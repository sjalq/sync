-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module Api.Enum.TransactionsOrderBy exposing (..)

import Json.Decode as Decode exposing (Decoder)


{-| Methods to use when ordering `Transaction`.
-}
type TransactionsOrderBy
    = Natural
    | IdAsc
    | IdDesc
    | ClientIdAsc
    | ClientIdDesc
    | AmountAsc
    | AmountDesc
    | DescriptionAsc
    | DescriptionDesc
    | TransactionDateAsc
    | TransactionDateDesc
    | PrimaryKeyAsc
    | PrimaryKeyDesc


list : List TransactionsOrderBy
list =
    [ Natural, IdAsc, IdDesc, ClientIdAsc, ClientIdDesc, AmountAsc, AmountDesc, DescriptionAsc, DescriptionDesc, TransactionDateAsc, TransactionDateDesc, PrimaryKeyAsc, PrimaryKeyDesc ]


decoder : Decoder TransactionsOrderBy
decoder =
    Decode.string
        |> Decode.andThen
            (\string ->
                case string of
                    "NATURAL" ->
                        Decode.succeed Natural

                    "ID_ASC" ->
                        Decode.succeed IdAsc

                    "ID_DESC" ->
                        Decode.succeed IdDesc

                    "CLIENT_ID_ASC" ->
                        Decode.succeed ClientIdAsc

                    "CLIENT_ID_DESC" ->
                        Decode.succeed ClientIdDesc

                    "AMOUNT_ASC" ->
                        Decode.succeed AmountAsc

                    "AMOUNT_DESC" ->
                        Decode.succeed AmountDesc

                    "DESCRIPTION_ASC" ->
                        Decode.succeed DescriptionAsc

                    "DESCRIPTION_DESC" ->
                        Decode.succeed DescriptionDesc

                    "TRANSACTION_DATE_ASC" ->
                        Decode.succeed TransactionDateAsc

                    "TRANSACTION_DATE_DESC" ->
                        Decode.succeed TransactionDateDesc

                    "PRIMARY_KEY_ASC" ->
                        Decode.succeed PrimaryKeyAsc

                    "PRIMARY_KEY_DESC" ->
                        Decode.succeed PrimaryKeyDesc

                    _ ->
                        Decode.fail ("Invalid TransactionsOrderBy type, " ++ string ++ " try re-running the @dillonkearns/elm-graphql CLI ")
            )


{-| Convert from the union type representing the Enum to a string that the GraphQL server will recognize.
-}
toString : TransactionsOrderBy -> String
toString enum____ =
    case enum____ of
        Natural ->
            "NATURAL"

        IdAsc ->
            "ID_ASC"

        IdDesc ->
            "ID_DESC"

        ClientIdAsc ->
            "CLIENT_ID_ASC"

        ClientIdDesc ->
            "CLIENT_ID_DESC"

        AmountAsc ->
            "AMOUNT_ASC"

        AmountDesc ->
            "AMOUNT_DESC"

        DescriptionAsc ->
            "DESCRIPTION_ASC"

        DescriptionDesc ->
            "DESCRIPTION_DESC"

        TransactionDateAsc ->
            "TRANSACTION_DATE_ASC"

        TransactionDateDesc ->
            "TRANSACTION_DATE_DESC"

        PrimaryKeyAsc ->
            "PRIMARY_KEY_ASC"

        PrimaryKeyDesc ->
            "PRIMARY_KEY_DESC"


{-| Convert from a String representation to an elm representation enum.
This is the inverse of the Enum `toString` function. So you can call `toString` and then convert back `fromString` safely.

    Swapi.Enum.Episode.NewHope
        |> Swapi.Enum.Episode.toString
        |> Swapi.Enum.Episode.fromString
        == Just NewHope

This can be useful for generating Strings to use for <select> menus to check which item was selected.

-}
fromString : String -> Maybe TransactionsOrderBy
fromString enumString____ =
    case enumString____ of
        "NATURAL" ->
            Just Natural

        "ID_ASC" ->
            Just IdAsc

        "ID_DESC" ->
            Just IdDesc

        "CLIENT_ID_ASC" ->
            Just ClientIdAsc

        "CLIENT_ID_DESC" ->
            Just ClientIdDesc

        "AMOUNT_ASC" ->
            Just AmountAsc

        "AMOUNT_DESC" ->
            Just AmountDesc

        "DESCRIPTION_ASC" ->
            Just DescriptionAsc

        "DESCRIPTION_DESC" ->
            Just DescriptionDesc

        "TRANSACTION_DATE_ASC" ->
            Just TransactionDateAsc

        "TRANSACTION_DATE_DESC" ->
            Just TransactionDateDesc

        "PRIMARY_KEY_ASC" ->
            Just PrimaryKeyAsc

        "PRIMARY_KEY_DESC" ->
            Just PrimaryKeyDesc

        _ ->
            Nothing
