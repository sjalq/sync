-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module Api.Object.Transaction exposing (..)

import Api.InputObject
import Api.Interface
import Api.Object
import Api.Scalar
import Api.ScalarCodecs
import Api.Union
import Graphql.Internal.Builder.Argument as Argument exposing (Argument)
import Graphql.Internal.Builder.Object as Object
import Graphql.Internal.Encode as Encode exposing (Value)
import Graphql.Operation exposing (RootMutation, RootQuery, RootSubscription)
import Graphql.OptionalArgument exposing (OptionalArgument(..))
import Graphql.SelectionSet exposing (SelectionSet)
import Json.Decode as Decode


{-| A globally unique identifier. Can be used in various places throughout the system to identify this single value.
-}
nodeId : SelectionSet Api.ScalarCodecs.Id Api.Object.Transaction
nodeId =
    Object.selectionForField "ScalarCodecs.Id" "nodeId" [] (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapCodecs |> .codecId |> .decoder)


id : SelectionSet Int Api.Object.Transaction
id =
    Object.selectionForField "Int" "id" [] Decode.int


clientId : SelectionSet (Maybe Int) Api.Object.Transaction
clientId =
    Object.selectionForField "(Maybe Int)" "clientId" [] (Decode.int |> Decode.nullable)


amount : SelectionSet Api.ScalarCodecs.BigFloat Api.Object.Transaction
amount =
    Object.selectionForField "ScalarCodecs.BigFloat" "amount" [] (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapCodecs |> .codecBigFloat |> .decoder)


description : SelectionSet (Maybe String) Api.Object.Transaction
description =
    Object.selectionForField "(Maybe String)" "description" [] (Decode.string |> Decode.nullable)


transactionDate : SelectionSet (Maybe Api.ScalarCodecs.Datetime) Api.Object.Transaction
transactionDate =
    Object.selectionForField "(Maybe ScalarCodecs.Datetime)" "transactionDate" [] (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapCodecs |> .codecDatetime |> .decoder |> Decode.nullable)


{-| Reads a single `User` that is related to this `Transaction`.
-}
userByClientId :
    SelectionSet decodesTo Api.Object.User
    -> SelectionSet (Maybe decodesTo) Api.Object.Transaction
userByClientId object____ =
    Object.selectionForCompositeField "userByClientId" [] object____ (Basics.identity >> Decode.nullable)
