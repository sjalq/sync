-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module Api.Object.UpdateTransactionPayload exposing (..)

import Api.Enum.TransactionsOrderBy
import Api.InputObject
import Api.Interface
import Api.Object
import Api.Scalar
import Api.ScalarCodecs
import Api.Union
import Graphql.Internal.Builder.Argument as Argument exposing (Argument)
import Graphql.Internal.Builder.Object as Object
import Graphql.Internal.Encode as Encode exposing (Value)
import Graphql.Operation exposing (RootMutation, RootQuery, RootSubscription)
import Graphql.OptionalArgument exposing (OptionalArgument(..))
import Graphql.SelectionSet exposing (SelectionSet)
import Json.Decode as Decode


{-| The exact same `clientMutationId` that was provided in the mutation input,
unchanged and unused. May be used by a client to track mutations.
-}
clientMutationId : SelectionSet (Maybe String) Api.Object.UpdateTransactionPayload
clientMutationId =
    Object.selectionForField "(Maybe String)" "clientMutationId" [] (Decode.string |> Decode.nullable)


{-| The `Transaction` that was updated by this mutation.
-}
transaction :
    SelectionSet decodesTo Api.Object.Transaction
    -> SelectionSet (Maybe decodesTo) Api.Object.UpdateTransactionPayload
transaction object____ =
    Object.selectionForCompositeField "transaction" [] object____ (Basics.identity >> Decode.nullable)


{-| Our root query field type. Allows us to run any query from our mutation payload.
-}
query :
    SelectionSet decodesTo RootQuery
    -> SelectionSet (Maybe decodesTo) Api.Object.UpdateTransactionPayload
query object____ =
    Object.selectionForCompositeField "query" [] object____ (Basics.identity >> Decode.nullable)


{-| Reads a single `User` that is related to this `Transaction`.
-}
userByClientId :
    SelectionSet decodesTo Api.Object.User
    -> SelectionSet (Maybe decodesTo) Api.Object.UpdateTransactionPayload
userByClientId object____ =
    Object.selectionForCompositeField "userByClientId" [] object____ (Basics.identity >> Decode.nullable)


type alias TransactionEdgeOptionalArguments =
    { orderBy : OptionalArgument (List Api.Enum.TransactionsOrderBy.TransactionsOrderBy) }


{-| An edge for our `Transaction`. May be used by Relay 1.

  - orderBy - The method to use when ordering `Transaction`.

-}
transactionEdge :
    (TransactionEdgeOptionalArguments -> TransactionEdgeOptionalArguments)
    -> SelectionSet decodesTo Api.Object.TransactionsEdge
    -> SelectionSet (Maybe decodesTo) Api.Object.UpdateTransactionPayload
transactionEdge fillInOptionals____ object____ =
    let
        filledInOptionals____ =
            fillInOptionals____ { orderBy = Absent }

        optionalArgs____ =
            [ Argument.optional "orderBy" filledInOptionals____.orderBy (Encode.enum Api.Enum.TransactionsOrderBy.toString |> Encode.list) ]
                |> List.filterMap Basics.identity
    in
    Object.selectionForCompositeField "transactionEdge" optionalArgs____ object____ (Basics.identity >> Decode.nullable)
